services:
  backend-flask:
    environment:
      FLASK_ENV: development
      FRONTEND_URL: "https://3000-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
      BACKEND_URL: "https://4567-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
      OTEL_SERVICE_NAME: 'backend-flask'
      OTEL_EXPORTER_OTLP_ENDPOINT: "https://api.honeycomb.io"
      OTEL_EXPORTER_OTLP_HEADERS: "x-honeycomb-team=${HONEYCOMB_API_KEY}"
      AWS_XRAY_URL: "**4567-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}**"
      AWS_XRAY_DAEMON_ADDRESS: "xray-daemon:2000"

    build:
      context: ./backend-flask
      dockerfile: Dockerfile
    ports:
      - "4567:4567"  # Change the host port if needed
    volumes:
      - ./backend-flask:/backend-flask
    command: flask run --host=0.0.0.0 --port=4567 --debug

  frontend-react-js:
    environment:
      REACT_APP_BACKEND_URL: "https://4567-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
      NODE_OPTIONS: --openssl-legacy-provider
    build:
      context: ./frontend-react-js
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-react-js:/frontend-react-js

  xray-daemon:
    image: "amazon/aws-xray-daemon"
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_REGION: "us-east-1"
    command: >
      xray -o -b xray-daemon:2000
    ports:
      - 2000:2000/udp
    

networks:
  internal-network:
    driver: bridge
    name: cruddur
